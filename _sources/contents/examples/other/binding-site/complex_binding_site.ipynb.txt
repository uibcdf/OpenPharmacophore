{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2ecf4905-105a-421a-85ce-8f7028849fde",
   "metadata": {},
   "source": [
    "# Binding site of a protein-ligand complex\n",
    "\n",
    "In this notebook we explore the binding site of two different protein ligand-complexes.\n",
    "\n",
    "We'll start by loading the complexes structures from a pdb file. We then proceed to prepare the ligand and the \n",
    "protein so we can extract and visualize the binding site of the protein"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3e989c61-d59b-429d-8fbe-c971396e2026",
   "metadata": {
    "tags": [
     "remove-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7433e5c590034cf0ae91ef9ae815f702",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import openpharmacophore as oph"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ba7f112-fb57-4af2-931d-60089a027068",
   "metadata": {},
   "source": [
    "## PDB 3BBH\n",
    "\n",
    "We start with the structure with PDB ID 3BBH. This file was already pretreated, so the protein contains hydrogens, and there is only\n",
    "a single chain."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "94a31c7a-b3b5-4b01-95f4-dc2a7278c334",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Has hydrogens: <bound method Protein.has_hydrogens of <openpharmacophore.molecular_systems.protein.Protein object at 0x7fe2332db790>>\n",
      "Has ligand: <bound method Protein.has_ligands of <openpharmacophore.molecular_systems.protein.Protein object at 0x7fe2332db790>>\n"
     ]
    }
   ],
   "source": [
    "protein = oph.load(\"../../data/3bbh_hyd.pdb\")\n",
    "print(f\"Has hydrogens: {protein.has_hydrogens}\")\n",
    "print(f\"Has ligand: {protein.has_ligands}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8fae8f3-6c9d-4b2a-b2d8-cafc359a2400",
   "metadata": {},
   "source": [
    "A protein may contain one or multiple ligands. To extract one we need to know its id. We can view\n",
    "the id of all the ligans in the protein by calling the attribute ```ligand_ids```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2e4c9085-e39b-4062-b1bc-acb5712abef5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['SFG:B']\n"
     ]
    }
   ],
   "source": [
    "lig_ids = protein.ligand_ids()\n",
    "print(lig_ids)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8cb67a66-5f17-4be7-9b7c-9d86ae72930d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<rdkit.Chem.rdchem.Mol at 0x7fe28d550e40>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ligand = protein.get_ligand(lig_ids[0])\n",
    "ligand.draw()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a695e9c-62e1-49cb-99d1-05a2db71a440",
   "metadata": {},
   "source": [
    "We fix the ligand. Its bond orders are correct now"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "de6f02f7-59e1-41d3-a611-cb37576189ee",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[16:54:42] WARNING: More than one matching pattern found - picking one\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<rdkit.Chem.rdchem.Mol at 0x7fe28d78e030>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ligand.fix_bond_order(\n",
    "        smiles=\"c1nc(c2c(n1)n(cn2)[C@H]3[C@@H]([C@@H]([C@H](O3)C[C@H](CC[C@@H](C(=O)O)N)N)O)O)N\"\n",
    ")\n",
    "ligand.draw()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0adf324c-9e4c-4507-a970-03816fe20c50",
   "metadata": {},
   "source": [
    "Now we can remove the ligand from the protein"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "52f9c758-ba80-4cf7-98c3-363b7cf9daa8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Has ligand: <bound method Protein.has_ligands of <openpharmacophore.molecular_systems.protein.Protein object at 0x7fe2332db790>>\n"
     ]
    }
   ],
   "source": [
    "protein.remove_ligand(lig_ids[0])\n",
    "print(f\"Has ligand: {protein.has_ligands}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4103e07c-05c7-40c4-ad7f-bcc6fd92d0f4",
   "metadata": {},
   "source": [
    "We create a binding site to obtain the receptor chemical features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "25ae3980-b3e8-4255-a915-2b22c72c99c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 492 chemical features in receptor\n",
      "Found 20 chemical features in ligand\n"
     ]
    }
   ],
   "source": [
    "bsite = oph.ComplexBindingSite(protein, ligand)\n",
    "\n",
    "# Extract chemical features and visualize them\n",
    "receptor_feats = bsite.get_chem_feats(frame=0)\n",
    "ligand_feats = ligand.get_chem_feats(conf_ind=0)\n",
    "\n",
    "print(f\"Found {len(receptor_feats)} chemical features in receptor\")\n",
    "print(f\"Found {len(ligand_feats)} chemical features in ligand\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "663b6e9a-f34d-40e5-a0f8-ccde29ddc806",
   "metadata": {},
   "source": [
    "Finally we visualize the binding site with the chemical"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "da4de4f8-d82a-4a55-9006-f111f26b5d9b",
   "metadata": {},
   "outputs": [],
   "source": [
    "viewer = oph.Viewer()\n",
    "viewer.add_components([bsite, ligand, ligand_feats])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "491b625c-e730-4451-9d20-1bd9de62ae94",
   "metadata": {
    "tags": [
     "remove-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c236439e29904bc7a678d41cb828f9bc",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "NGLWidget()"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "view = viewer.show()\n",
    "viewer.set_protein_style(\"ball+stick\")\n",
    "view"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf1ae74c-97e1-4248-8201-6a8df47aa287",
   "metadata": {},
   "source": [
    "<img src=\"../../../../_static/bsite_3bbh.png\" alt=\"pharmacophore\">"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1be7bede-c9dc-40ac-bca1-379b3ba4bcde",
   "metadata": {},
   "source": [
    "## PDB 1M7W"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "39e42a02-15b2-4af9-aade-adccb0e8cc8f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Has hydrogens: <bound method Protein.has_hydrogens of <openpharmacophore.molecular_systems.protein.Protein object at 0x7fe232f37dd0>>\n",
      "Has ligand: <bound method Protein.has_ligands of <openpharmacophore.molecular_systems.protein.Protein object at 0x7fe232f37dd0>>\n"
     ]
    }
   ],
   "source": [
    "protein_2 = oph.load(\"../../data/1m7w_A_chain.pdb\")\n",
    "print(f\"Has hydrogens: {protein_2.has_hydrogens}\")\n",
    "print(f\"Has ligand: {protein_2.has_ligands}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4d261788-628a-4526-83e4-a1154cb5ea98",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['DAO:B']\n"
     ]
    }
   ],
   "source": [
    "lig_ids = protein_2.ligand_ids()\n",
    "print(lig_ids)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a1e98f3f-bde5-45cd-8209-7607d741a0fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<rdkit.Chem.rdchem.Mol at 0x7fe28d50fbc0>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ligand_2 = protein_2.get_ligand(lig_ids[0])\n",
    "ligand_2.draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "74373e02-55f4-4cdd-bd3d-5654204ba216",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[16:54:43] WARNING: More than one matching pattern found - picking one\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<rdkit.Chem.rdchem.Mol at 0x7fe28d423ee0>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ligand_2.fix_bond_order(smiles=\"CCCCCCCCCCCC(=O)O\")\n",
    "ligand_2.add_hydrogens()\n",
    "ligand_2.draw()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "733ddd90-5510-4b25-919d-2ad128e8bf7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Has ligand: <bound method Protein.has_ligands of <openpharmacophore.molecular_systems.protein.Protein object at 0x7fe232f37dd0>>\n"
     ]
    }
   ],
   "source": [
    "protein_2.remove_ligand(lig_ids[0])\n",
    "print(f\"Has ligand: {protein_2.has_ligands}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b73eae66-cf0a-437b-be4a-7fdfd917e455",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Has hydrogens: <bound method Protein.has_hydrogens of <openpharmacophore.molecular_systems.protein.Protein object at 0x7fe232f37dd0>>\n"
     ]
    }
   ],
   "source": [
    "protein_2.add_hydrogens()\n",
    "print(f\"Has hydrogens: {protein_2.has_hydrogens}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d8b6e5ae-f4c5-405c-bc06-0205eb308743",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 652 chemical features in receptor\n",
      "Found 9 chemical features in ligand\n"
     ]
    }
   ],
   "source": [
    "bsite_2 = oph.ComplexBindingSite(protein_2, ligand_2)\n",
    "\n",
    "receptor_feats_2 = bsite_2.get_chem_feats(frame=0)\n",
    "ligand_feats_2 = ligand_2.get_chem_feats(conf_ind=0)\n",
    "\n",
    "print(f\"Found {len(receptor_feats_2)} chemical features in receptor\")\n",
    "print(f\"Found {len(ligand_feats_2)} chemical features in ligand\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5416f62a-fbc0-4c8a-8225-af620fb8571e",
   "metadata": {},
   "outputs": [],
   "source": [
    "viewer_2 = oph.Viewer()\n",
    "viewer_2.add_components([bsite_2,ligand_2, ligand_feats_2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4f6a3760-eb30-4fdf-8156-51fb81cf8c58",
   "metadata": {
    "tags": [
     "remove-output"
    ]
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b21fd08dae0b4af0a29f603cc706ff69",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "NGLWidget()"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "view_2 = viewer_2.show()\n",
    "viewer_2.set_protein_style(\"ball+stick\")\n",
    "view_2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a9f5845-4928-445d-add5-4381a40efdf9",
   "metadata": {},
   "source": [
    "<img src=\"../../../../_static/bsite_1m7w.png\" alt=\"pharmacophore\">\n",
    "<div class=\"alert alert-info\">\n",
    "    <strong>Note:</strong>\n",
    "    <p>view and view_2 display an interactive widget. For simplicity an image is presented in the documentation.</p>\n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "74110d0e-f4a6-49a7-8841-2c2f77bd6dc8",
   "metadata": {
    "tags": [
     "remove-cell"
    ]
   },
   "outputs": [],
   "source": [
    "# Save view image so it can be viewed in the documentation\n",
    " \n",
    "import time\n",
    "import threading\n",
    "\n",
    "save = False\n",
    "\n",
    "def save_image(view):\n",
    "    im = view.render_image()\n",
    "    while not im.value:\n",
    "        time.sleep(0.1)\n",
    "    save_path = \"../../../../_static/bsite_3bbh.png\"\n",
    "    with open(save_path, \"wb\") as fp:\n",
    "        fp.write(im.value)    \n",
    "\n",
    "def generate_image():\n",
    "    thread = threading.Thread(target=save_image, args=(viewer.to_nglview(),), daemon=True)\n",
    "    thread.start()\n",
    "    \n",
    "\n",
    "if save:\n",
    "    generate_image()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
